// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ismtabo/phrases-of-the-year/pkg/service (interfaces: PhrasesService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/ismtabo/phrases-of-the-year/pkg/model"
)

// MockPhrasesService is a mock of PhrasesService interface.
type MockPhrasesService struct {
	ctrl     *gomock.Controller
	recorder *MockPhrasesServiceMockRecorder
}

// MockPhrasesServiceMockRecorder is the mock recorder for MockPhrasesService.
type MockPhrasesServiceMockRecorder struct {
	mock *MockPhrasesService
}

// NewMockPhrasesService creates a new mock instance.
func NewMockPhrasesService(ctrl *gomock.Controller) *MockPhrasesService {
	mock := &MockPhrasesService{ctrl: ctrl}
	mock.recorder = &MockPhrasesServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPhrasesService) EXPECT() *MockPhrasesServiceMockRecorder {
	return m.recorder
}

// CreatePhrase mocks base method.
func (m *MockPhrasesService) CreatePhrase(arg0 context.Context, arg1 *model.Phrase) (*model.Phrase, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePhrase", arg0, arg1)
	ret0, _ := ret[0].(*model.Phrase)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePhrase indicates an expected call of CreatePhrase.
func (mr *MockPhrasesServiceMockRecorder) CreatePhrase(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePhrase", reflect.TypeOf((*MockPhrasesService)(nil).CreatePhrase), arg0, arg1)
}

// GetPhrases mocks base method.
func (m *MockPhrasesService) GetPhrases(arg0 context.Context, arg1 string) ([]*model.Phrase, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPhrases", arg0, arg1)
	ret0, _ := ret[0].([]*model.Phrase)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPhrases indicates an expected call of GetPhrases.
func (mr *MockPhrasesServiceMockRecorder) GetPhrases(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPhrases", reflect.TypeOf((*MockPhrasesService)(nil).GetPhrases), arg0, arg1)
}
