// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ismtabo/phrases-of-the-year/pkg/repository (interfaces: PhrasesRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/ismtabo/phrases-of-the-year/pkg/model"
)

// MockPhrasesRepository is a mock of PhrasesRepository interface.
type MockPhrasesRepository struct {
	ctrl     *gomock.Controller
	recorder *MockPhrasesRepositoryMockRecorder
}

// MockPhrasesRepositoryMockRecorder is the mock recorder for MockPhrasesRepository.
type MockPhrasesRepositoryMockRecorder struct {
	mock *MockPhrasesRepository
}

// NewMockPhrasesRepository creates a new mock instance.
func NewMockPhrasesRepository(ctrl *gomock.Controller) *MockPhrasesRepository {
	mock := &MockPhrasesRepository{ctrl: ctrl}
	mock.recorder = &MockPhrasesRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPhrasesRepository) EXPECT() *MockPhrasesRepositoryMockRecorder {
	return m.recorder
}

// CreatePhrase mocks base method.
func (m *MockPhrasesRepository) CreatePhrase(arg0 context.Context, arg1 *model.Phrase) (*model.Phrase, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePhrase", arg0, arg1)
	ret0, _ := ret[0].(*model.Phrase)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePhrase indicates an expected call of CreatePhrase.
func (mr *MockPhrasesRepositoryMockRecorder) CreatePhrase(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePhrase", reflect.TypeOf((*MockPhrasesRepository)(nil).CreatePhrase), arg0, arg1)
}

// GetPhrases mocks base method.
func (m *MockPhrasesRepository) GetPhrases(arg0 context.Context, arg1 string) ([]*model.Phrase, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPhrases", arg0, arg1)
	ret0, _ := ret[0].([]*model.Phrase)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPhrases indicates an expected call of GetPhrases.
func (mr *MockPhrasesRepositoryMockRecorder) GetPhrases(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPhrases", reflect.TypeOf((*MockPhrasesRepository)(nil).GetPhrases), arg0, arg1)
}
